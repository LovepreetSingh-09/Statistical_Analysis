College
library(ISLR)
college=read.csv('College.csv')
library(ISLR)
fix(College)
college=read.csv('College.csv')
college=College
library(ISLR)
fix(College)
str(college)
str(college)
fix(College)
college=College
str(college)
row.names(college)
names(college)
college=college[,-1]
names(college)
fix(College)
college=College
summary(college)
pairs(college[:10])
pairs(college[1:10])
pairs(college[1:10])
pairs(college[1:10])
plot(college$Outstate,college$Private)
boxplot(college$Outstate,college$Private)
Elite =rep ("No",nrow(college ))
Elite
Elite [college$Top10perc >50]=" Yes"
Elite
Elite =as.factor (Elite)
college =data.frame(college ,Elite)
summary(college)
Auto
fix(Auto)
summary(Auto)
cor(Auto$mpg,Auto)
cor(Auto$mpg,Auto[:])
cor(Auto$mpg,Auto[1])
cor(Auto$mpg,Auto[2,3,4,5])
cor(Auto$mpg,Auto[c(2,3,4,5)])
cor(Auto$mpg,Auto[c(1,2,3,4,5)])
cor(Auto$mpg,Auto[c(1,2,3,4,5,6,7,8)])
cor(Auto$mpg,Auto[c(1:8)])
cor(Auto$mpg,Auto[,1:8)
cor(Auto$mpg,Auto[,1:8])
cor(Auto$mpg,Auto[1:8])
library(MASS)
fix(Boston)
names(Boston)
library(lm)
lr=lm(medv~lstat)
lr=lm(medv~lstat,data=Boston)
lr
summary(lr)
confint (lr)
predict (lr ,data.frame(lstat =(c(5 ,10 ,15) )),interval =" confidence ")
predict (lr ,data.frame(lstat =(c(5 ,10 ,15) )))
predict (lr ,data.frame(lstat =(c(5 ,10 ,15) )),interval =" confidence ")
?predict
predict (lr ,data.frame(lstat =(c(5 ,10 ,15) )),interval ="confidence")
predict (lr ,data.frame(lstat =(c(5 ,10 ,15) )),interval ="prediction")
plot(lstat ,medv)
attach(Boston)
plot(lstat,medv)
abline (lm.fit)
abline (lr)
par(mfrow =c(2,2))
plot(lr)
plot(predict (lm.fit), residuals (lm.fit))
plot(predict (lr), residuals (lr))
plot(hatvalues (lr ))
which.max (hatvalues (lr))
lr =lm(medv ∼ lstat+age ,data=Boston )
summary (lr)
lr =lm(medv ∼ . ,data=Boston )
summary (lr)
lm(formula = medv ∼ lstat + I(lstat ^2))
summary(lr)
lr=lm(formula = medv ∼ lstat + I(lstat ^2))
summary(lr)
lr1 =lm(medv∼lstat)
summary(lr1)
anova(lm.fit ,lm.fit2)
anova(lr ,lr1)
library (ISLR)
fix(Hitters )
names(Hitters )
dim(Hitters )
sum(is.na(Hitters$Salary))
library(leaps)
install.packages("leaps")
library(leaps)
subset=regsubsets(Salary∼.,Hitters)
summary(subset)
subset=regsubsets(salary~.,Hitters,nvmax=10)
subset=regsubsets(Salary~.,Hitters,nvmax=10)
names(subset)
summary(subset)
names(summary(subset))
summary$rsq
summary(subset)$rsq
par(mfrow=c(2,2))
plot(summary(subset)$rss ,xlab=" Number of Variables ",ylab=" RSS",type="l")
plot(summary(subset)$adjr2 ,xlab =" Number of Variables ",ylab=" Adjusted RSq",type="l")
which.max(summary(subset)$adjr2)
ponts(10,summary(subset)$adjr2[10],col='red',cex=2,pch=20)
points(10,summary(subset)$adjr2[10],col='red',cex=2,pch=20)
coef(subset)
coef(subset,6)
coef(subset,11)
coef(subset,10)
subset=regsubsets(Salary~.,Hitters,nvmax=10,method='forward')
coef(subset_fwd,9)
subset_fwd=regsubsets(Salary~.,Hitters,nvmax=10,method='forward')
subset_bwd=regsubsets(Salary~.,Hitters,nvmax=10,method = 'backward')
coef(subset_fwd,9)
coef(subset_bwd,9)
set.seed (1)
train=sample (c(TRUE ,FALSE), nrow(Hitters ),rep=TRUE)
train
test =(! train )
test
subset_best=regsubsets (Salary∼.,data=Hitters[train ,],nvmax =19)
test.mat=model.matrix (Salary∼.,data=Hitters [test ,])
test_matrix=model.matrix (Salary∼.,data=Hitters [test ,])
test_matrix
test_matrix=model.matrix (Salary∼.,data=Hitters [test ,])
test_matrix
errors=rep(NA,10)
for i in 1:10{
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((Hitters$Salary[test]-pred)^2)
}
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((Hitters$Salary[test]-pred)^2)
}
errors=rep(NA,10)
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((Hitters$Salary[test]-pred)^2)
}
test_matrix=model.matrix (Salary∼.,data=Hitters [test ,])
test_matrix
errors=rep(NA,10)
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((Hitters$Salary[test]-pred)^2)
}
nrow(test_matrix)
nrow(pred)
nrow(Hitters$Salary[test])
(Hitters$Salary[test])
test
table(test)
subset_best=regsubsets(Salary∼.,data=Hitters[train ,],nvmax =19)
test_matrix=model.matrix (Salary∼.,data=Hitters[test ,])
nrow(test_matrix)
hitters =na.omit(Hitters )
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =19)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
Hitters$Salary[test]
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
Hitters$Salary[test]
errors=rep(NA,10)
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((Hitters$Salary[test]-pred)^2)
}
errors
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
Hitters$Salary[test]
hitters$Salary[test]
errors=rep(NA,10)
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((hitters$Salary[test]-pred)^2)
}
hitters
hitters=na.omit(hitters)
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
hitters$Salary[test]
na.omit(hitters$Salary[test])
hitters$Salary[test]
hitters=na.omit(hitters$Salary[test])
hitters$Salary[test]
hitters$Salary[test]
hitters=na.omit(hitters)
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
hitters =na.omit(Hitters )
dim(hitters)
Hitters =na.omit(Hitters )
dim(hitters)
hitters=na.omit(hitters)
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
hitters=na.omit(hitters$Salary[test])
hitters$Salary[test]
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
hitters =na.omit(Hitters )
hitters=na.omit(hitters)
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
hitters$Salary[test]
train=sample (c(TRUE ,FALSE), nrow(hitters ),rep=TRUE)
train
test =(! train )
table(test)
hitters=na.omit(hitters)
subset_best=regsubsets(Salary∼.,data=hitters[train ,],nvmax =10)
test_matrix=model.matrix (Salary∼.,data=hitters[test ,])
nrow(test_matrix)
hitters$Salary[test]
errors=rep(NA,10)
for (i in 1:10){
coefi=coef(subset_best,id=i)
pred=test_matrix[,names(coefi)]%*%coefi
errors[i]=mean((hitters$Salary[test]-pred)^2)
}
errors
which.min(errors)
k=10
set.seed (1)
folds=sample (1:k,nrow(Hitters ),replace =TRUE)
cv.errors =matrix (NA ,k,19, dimnames =list(NULL , paste (1:19) ))
cv.errors
for(j in 1:k){
best.fit =regsubsets (Salary∼.,data=Hitters [folds !=j,],
nvmax =19)
for(i in 1:19) {
pred=predict (best.fit ,Hitters [folds ==j,], id=i)
cv.errors [j,i]=mean( (Hitters$Salary[folds ==j]-pred)^2)
}
}
for(j in 1:k){
best.fit =regsubsets (Salary∼.,data=Hitters [folds !=j,], nvmax =19)
for(i in 1:10) {
pred=predict (best.fit ,hitters [folds ==j,], id=i)
cv.errors [j,i]=mean((hitters$Salary[folds ==j]-pred)^2)
}
}
